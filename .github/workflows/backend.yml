# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  IMAGE_NAME: cinema-reservation-backend
  DOCKER_REGISTRY: docker-registry.theliver.pl

jobs:
  backend_test:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 15
        uses: actions/setup-java@v1
        with:
          java-version: 15
      - name: Build with Gradle
        run: ./cinema-backend/gradlew -b cinema-backend/build.gradle.kts test

  build_and_push:
    needs: backend_test
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build cinema-backend --file cinema-backend/Dockerfile --tag $IMAGE_NAME

      - name: Login to docker registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.THELIVER_DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.THELIVER_DOCKER_REGISTRY_PASSWORD }}
          registry: docker-registry.theliver.pl

      - name: Push image :latest
        run: |
          IMAGE_ID=docker-registry.theliver.pl/$IMAGE_NAME
          VERSION=latest
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          echo IMAGE_ID=$IMAGE_ID
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION